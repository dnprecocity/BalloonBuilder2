{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","isAccordionOpen","setAccordionOpen","categories","setCategories","supported","id","useEffect","fetchCategories","a","axios","get","response","data","slice","fetchBalloons","catIdx","subCatIdx","subCatId","balloons","cats","hits","style","toggled","toggle","map","cat","allowZeroExpanded","name","className","balloon","idx","onClick","window","CloningBalloon","src","subCat","represented_product","product_name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a534059.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Hamburger from 'hamburger-react'\nimport axios from 'axios';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion';\n\nconst App = () => {\n  const [isAccordionOpen, setAccordionOpen] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const supported = [{ id: 47094 }, {id: 863280}, { id: 660902}, { id: 661115 }, { id: 662678}, { id: 686233}, { id: 740789}, { id: 777434}, { id: 794372}, { id: 846715}, { id:863280}];\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    const response = await axios.get(\n      `https://peaceful-stream-16724.herokuapp.com/https://test-web.partycity.com/s/Sites-partycity_us2-Site/dw/shop/v20_4/categories/balloons?client_id=f75472a2-de04-4b73-80e1-32a261e83281&levels=3`\n    );\n    \n    // const supportedCats = categories.slice(0,2).map(cat => {\n    //   cat.categories = cat.categories.filter(subCat => {\n    //     return (subCat.c_kioskOnly === true)\n    //   });\n\n    // return cat;\n    // })\n\n    setCategories(response.data.categories.slice(0, 3));\n  }\n\n  const fetchBalloons = async (catIdx, subCatIdx, subCatId) => {\n    const balloons = await axios.get(\n      `https://peaceful-stream-16724.herokuapp.com/https://test-web.partycity.com/s/Sites-partycity_us2-Site/dw/shop/v20_4/product_search?client_id=f75472a2-de04-4b73-80e1-32a261e83281&count=200&refine_1=cgid=${subCatId}&refine_2=c_kioskOnly=true`\n    );\n\n    let cats = [...categories];\n    categories[catIdx].categories[subCatIdx].balloons = balloons.data.hits;\n    setCategories(cats);\n  }\n  \n  return (\n    <div style={{ \"height\": \"100%\" }}>\n      <Hamburger toggled={isAccordionOpen} toggle={(setAccordionOpen)} />\n      {\n        isAccordionOpen ?\n          <div style={{ \"position\": \"relative\", \"height\": \"100%\", \"overflow:\": \"scroll\", \"overflowX\": \"hidden\", \"backgroundColor\": \"white\", \"zIndex\": \"2\" }}>\n            {categories.map((cat, catIdx) => (\n              <Accordion\n                allowZeroExpanded key={catIdx}\n              >\n                <AccordionItem>\n                  <AccordionItemHeading>\n                    <AccordionItemButton>\n                      {cat.name}\n                    </AccordionItemButton>\n                  </AccordionItemHeading>\n\n                  <AccordionItemPanel\n                    // key={subCatIdx}\n                    className=\"subCat\"\n                  >\n                    <Accordion\n                      style={{ \"textIndent\": \"25px\" }}\n                      allowZeroExpanded\n                      // className=\"subCat\"\n                    >\n                      <AccordionItem>\n                        <AccordionItemHeading>\n                          <AccordionItemButton\n                          > \n                            Current supported SKUs (POC)\n                          </AccordionItemButton>\n                        </AccordionItemHeading>\n\n                          {supported.map((balloon, idx) => (\n                            <AccordionItemPanel\n                              key={idx}\n                              onClick={() => {\n                                window.CloningBalloon(`${balloon.id}`);\n                                setAccordionOpen(false);\n                              }}\n                            >\n                              <div style={{ \"display\": \"flex\", \"alignItems\": \"center\", \"paddingLeft\": \"40px\" }}>\n                                <div>\n                                  {balloon.id}\n                                </div>\n                                <div>\n                                  <img\n                                    style={{ \"height\": \"40px\", \"width\": \"40px\" }}\n                                    src={`https://partycity.scene7.com/is/image/PartyCity/_sq_?$_500x500_$&$product=PartyCity/${balloon.id}`}\n                                  />\n                                </div>\n                              </div>\n                              \n                            </AccordionItemPanel>\n                          ))}\n\n                      </AccordionItem>\n                    </Accordion>\n                  </AccordionItemPanel>\n\n\n\n                  {!!cat.categories && cat.categories.map((subCat, subCatIdx) => (\n                    <AccordionItemPanel\n                      key={subCatIdx}\n                      className=\"subCat\"\n                    >\n                      <Accordion\n                        style={{ \"textIndent\": \"25px\" }}\n                        allowZeroExpanded\n                        onClick={() => fetchBalloons(catIdx, subCatIdx, subCat.id)}\n                        className=\"subCat\"\n                      >\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton\n                            >\n                              {subCat.name}\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n\n                          {!!subCat.balloons && subCat.balloons.map((balloon, idx) => (\n                            <AccordionItemPanel\n                              key={idx}\n                              onClick={() => {\n                                window.CloningBalloon(`${balloon.represented_product.id}`);\n                                setAccordionOpen(false);\n                              }}\n                            >\n                              {/* <div style={{ \"display\": \"flex\", \"alignItems\": \"center\", \"justifyContent\": 'space-between' }}> */}\n                              <div style={{ \"display\": \"flex\", \"alignItems\": \"center\", \"paddingLeft\": \"40px\" }}>\n                                <div>\n                                  {balloon.product_name}\n                                </div>\n                                <div>\n                                  <img \n                                    style={{ \"height\": \"40px\", \"width\": \"40px\" }}\n                                    src={`https://partycity.scene7.com/is/image/PartyCity/_sq_?$_500x500_$&$product=PartyCity/${balloon.represented_product.id}`}\n                                  />\n                                </div>\n                              </div>\n                            </AccordionItemPanel>\n                          ))}\n\n                        </AccordionItem>\n                      </Accordion>\n                    </AccordionItemPanel>\n                  ))}\n\n                </AccordionItem>\n              </Accordion>\n            ))}\n          </div>\n          : null\n      }\n      {/* <div style={{ \"position\": \"absolute\", \"bottom\": \"10%\", \"width\": \"100%\", \"zIndex\": \"1\" }}>\n        <div style={{ \"display\": \"flex\", \"justifyContent\": \"center\" }}>\n          <button onClick={() => window.CloningBalloon()}>Add (webpage)</button>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}